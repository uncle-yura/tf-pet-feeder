#include <tunables/global>

profile tf_pet_feeder flags=(attach_disconnected,mediate_deleted,complain) {
  #include <abstractions/base>

  # Capabilities
  file,
  signal (send) set=(kill,term,int,hup,cont),

  # S6-Overlay
  /init ix,
  /bin/** ix,
  /usr/bin/** ix,
  /run/{s6,s6-rc*,service}/** ix,
  /package/** ix,
  /command/** ix,
  /etc/services.d/** rwix,
  /etc/cont-init.d/** rwix,
  /etc/cont-finish.d/** rwix,
  /run/{,**} rwk,
  /dev/tty rw,

  # Bashio
  /usr/lib/bashio/** ix,
  /tmp/** rwk,

  # Access to options.json and other files within your addon
  /data/** rw,

  # Network access
  network tcp,
  network udp,

  # Start new profile for service
  /usr/sbin/nginx cx -> nginx,
  /usr/bin/tf_pet_feeder cx -> tf_pet_feeder,

  profile nginx flags=(attach_disconnected,mediate_deleted,complain) {
    #include <abstractions/base>

    # Access to options.json and other files within your addon
    /data/** rw,

    /bin/bash rix,
    /bin/echo ix,
    /etc/passwd r,
    /dev/tty rw,
    /var/lib/nginx/{,**} rw,
  }

    profile tf_pet_feeder flags=(attach_disconnected,mediate_deleted,complain) {
    #include <abstractions/base>

    # Receive signals from S6-Overlay
    signal (receive) peer=*_tf-pet-feeder,

    # Access to options.json and other files within your addon
    /data/** rw,

    # Access to mapped volumes specified in config.json
    /config/** rw,

    # Access required for service functionality
    /usr/bin/tf_pet_feeder r,
    /bin/bash rix,
    /bin/echo ix,
    /etc/passwd r,
    /dev/tty rw,

    # Allow outbound flask communication
    network tcp,
    network inet stream,
    network inet dgram,
    network inet6 stream,
    network inet6 dgram,

    # Add any additional flask-related rules if needed
    # For example, if you're using the paho-mqtt library
    /usr/bin/python3 cx -> flask,
    /usr/lib/python3.9/site-packages/flask/** r,
  }
}